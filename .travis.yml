language: cpp
dist: trusty

addons:
    apt:
        sources:
            # Ubuntu testing
            - ubuntu-toolchain-r-test
            # clang
            - llvm-toolchain-trusty-6.0
        packages:
            # C++17
            - g++-8
            - clang-6.0
            # gdb
            - gdb
            # ninja
            - ninja-build
            # realpath
            - realpath
            # boost
            - libboost-all-dev
            # LSP server clangd
            - clang-tools-6.0

cache:
    ccache: true

before_install:
    # tell apt to allow parallel downloads
    - sudo sh -c "echo 'Acquire::Queue-Mode "host";' >> /etc/apt/apt.conf"
    # gcc
    - sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 90
    # clang
    - export PATH=$(echo $PATH | sed 's/:\/usr\/local\/clang-5.0.0\/bin//g')
    - sudo update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-6.0 90
    - which clang++
    - file $(which clang++)
    # ld
    - sudo add-apt-repository -y ppa:jonathonf/binutils
    - PACKAGES=${PACKAGES}"binutils "
    # python
    - sudo add-apt-repository -y ppa:jonathonf/python-2.7
    - PACKAGES=${PACKAGES}"python2.7 "
    - sudo add-apt-repository -y ppa:jonathonf/python-3.6
    - PACKAGES=${PACKAGES}"python3.6 "
    # Qt
    - sudo add-apt-repository -y ppa:beineri/opt-qt-5.10.1-trusty
    - PACKAGES=${PACKAGES}"qt510base "
    # protobuf
    - git clone -b v1.10.x --single-branch --depth=1 --recursive https://github.com/grpc/grpc
    # Update sources
    - sudo apt-get update

install:
    #install packages
    - sudo apt-get install ${PACKAGES}
    # ccache
    - which clang++
    - sudo ln -s $(which ccache) /usr/lib/ccache/clang++
    - which clang++
    - which g++
    # protobuf
    - cd grpc && mkdir build && cd build
    - cmake .. -G Ninja
    - sudo ninja install
    - sudo cp grpc_* /usr/local/bin
    - sudo cp *.a /usr/local/lib
    - cd ../..
    - export GRPC_LIBS=$(sh -e print_libs.sh)
    - echo $GRPC_LIBS

before_script:
    # Display
    - export DISPLAY=:99.0
    - sh -e /etc/init.d/xvfb start
    # Qt
    - source /opt/qt510/bin/qt510-env.sh
    - export QT_FATAL_WARNINGS=1
    # Sanitizer settings
    - export ASAN_SYMBOLIZER_PATH=/usr/lib/llvm-6.0/bin/llvm-symbolizer
    - file /usr/lib/llvm-6.0/bin/llvm-symbolizer
    - export UBSAN_OPTIONS=print_stacktrace=1
    - export LSAN_OPTIONS=suppressions=../lsan.supp #ignore Qt's memory leaks
    # print versions
    - g++ --version
    - clang++ --version
    - protoc --version
    - cmake --version
    - ninja --version
    - python --version
    - python2 --version
    - python3 --version
    - gdb --version
    - ld --version
    - clangd-6.0 --version
    - echo $PATH
    # set up python environment
    - mkdir build && cd build
    - cmake -G Ninja ..
    - ninja python_environment
    - cd .. && rm -R build

script:
    - ./run_all_test_configurations.sh

after_script:
    # ccache stats
    - ccache -s
