language: cpp
dist: trusty

addons:
    apt:
        sources:
            # Ubuntu testing
            - ubuntu-toolchain-r-test
        packages:
            # C++17
            #- g++-7
            # ninja
            #- ninja-build
            # boost
            #- libboost-all-dev
            # realpath
            - realpath

before_install:
    # gcc 7
    #- sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-7 90
    # ld
    #- sudo add-apt-repository -y ppa:jonathonf/binutils
    # Qt 5.9
    #- sudo add-apt-repository -y ppa:beineri/opt-qt591-trusty
    # protobuf
    #- git clone -b v1.10.x --single-branch --recursive https://github.com/grpc/grpc
    # Update sources
    #- sudo apt-get update

install:
    - cat envtest.sh
    - touch lib1
    - touch lib2
    - source envtest.sh
    - echo $PRETEST
    - echo LIB_LIST
    - false
    # ld
    - sudo apt-get install binutils
    # Qt 5.9
    - sudo apt-get install qt59base
    # protobuf
    - cd grpc && mkdir build && cd build
    - cmake .. -G Ninja
    - ninja -j4
    - sudo ninja install -j4
    - find . -name "lib*.a"
    - sudo cp grpc_cpp_plugin /usr/local/bin
    - sudo cp *.a /usr/local/lib
    #- sudo cp third_party/boringssl/crypto/libcrypto.a /usr/local/lib
    #- sudo cp third_party/boringssl/ssl/libssl.a /usr/local/lib
    #- sudo cp third_party/zlib/libz.a /usr/local/lib
    #- sudo cp third_party/zlib/libz.so /usr/local/lib
    #- sudo cp third_party/protobuf/libprotobuf.a /usr/local/lib
    #- sudo cp third_party/protobuf/*.a /usr/local/lib
    #- sudo cp third_party/cares/cares/lib/libcares.a /usr/local/lib
    - cd ../..
    - source ./generate_grpc_libs.sh
    - echo $GRPC_LIBS
    - . ./generate_grpc_libs.sh
    - echo $GRPC_LIBS
    - false #early exit, just to check if setting environment variables works

before_script:
    # Display
    - export DISPLAY=:99.0
    - sh -e /etc/init.d/xvfb start
    # Qt 5.9
    - source /opt/qt59/bin/qt59-env.sh
    - export QT_FATAL_WARNINGS=1
    # ignore Qt's memory leaks
    - export LSAN_OPTIONS=suppressions=../lsan.supp
    # print versions
    - g++ --version
    - protoc --version
    - cmake --version
    - ninja --version
    - ld --version
    - /usr/bin/x86_64-linux-gnu-ld --version
    # set up build directories
    - mkdir debug_build
    - mkdir release_build

script:
    # using libfinder to find some missing symbols
    - sudo apt-get install locate
    - sudo updatedb
    - git clone https://github.com/Toeger/LibFinder
    - cd LibFinder && mkdir build && cd build
    - cmake -G Ninja ..
    - ninja -j4
    - ./libfinder -u 2>/dev/null
    - ./libfinder -s ares_inet_ntop
    - ./libfinder -s OPENSSL_free
    - ./libfinder -s BIO_pending
    - cd ../..
    - false #just so this test doesn't count as a successful build
    # debug build
    - cd debug_build
    - cmake -DCMAKE_BUILD_TYPE=DEBUG -G Ninja ..
    - ninja -j4
    - ./SCE test
    # release build
    #- cd ../release_build
    #- cmake -DCMAKE_BUILD_TYPE=RELEASE -G Ninja ..
    #- ninja -j4
    #- ./SCE test
