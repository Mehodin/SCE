syntax = "proto3";

package sce.proto;

message FilePosition { //position in a file
	uint32 line = 1;
	uint32 character = 2;
}

message FileRange {
	FilePosition start = 1;
	FilePosition end = 2;
}

message FileState { //Represents the current state of the buffer. Used to resolve asynchonous edits.
	string file = 1;
	uint32 state = 2;
}

message FileBuffer {
	FileState state = 1;
	string text = 2;
}

message Color {
	int32 rgb = 1; //to be interpreted as 0x00RRGGBB
}

message TestIn {}
message TestOut {
	string message = 1;
}

message GetCurrentFileNameIn {}
message GetCurrentFileNameOut {
	string filename = 1;
}

message AddNoteIn {
	FileState state = 1;
	FileRange range = 2;
	string note = 3;
	Color color = 4;
	enum Type {
		NOTE = 0;
		WARNING = 1;
		ERROR = 2;
	}
	Type type = 5;
}
message AddNoteOut {
	bool success = 1;
}

message GetCurrentBufferIn {}
message GetCurrentBufferOut {
	FileState filestate = 1;
	string buffer = 2;
}

message GetBufferIn {
	FileState filestate = 1;
}
message GetBufferOut {
	string buffer = 1;
}

service Query {
	//Generic functions
	rpc Test(TestIn) returns (TestOut); //returns "testresponse"
	rpc GetCurrentFileName(GetCurrentFileNameIn) returns (GetCurrentFileNameOut);
	rpc GetCurrentBuffer(GetCurrentBufferIn) returns (GetCurrentBufferOut);
	rpc GetBuffer(GetBufferIn) returns (GetBufferOut);

	//Analyzer functions
	rpc AddNote(AddNoteIn) returns (AddNoteOut);
}

//messages for the notification server
message NotifyOnEditsIn {}
message NotifyOnEditsOut {
	FileState filestate = 1;
}